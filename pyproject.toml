[project]
name = "dicontainer"
version = "0.1.0"
description = "Dependency Injection container"
authors = [
    { name = "Aleksandr Egert", email = "9213855+kreigan@users.noreply.github.com" },
]
dependencies = [
    "typing-extensions>=4.12.2",
]
requires-python = ">=3.10"
readme = "README.md"
license = { text = "MIT" }

[build-system]
requires = ["pdm-backend"]
build-backend = "pdm.backend"


[tool.pdm]
distribution = true

[tool.pdm.dev-dependencies]
lint = [
    "black>=24.8.0",
    "ruff>=0.6.3",
]
test = [
    "pytest>=8.3.2",
    "pytest-cov>=5.0.0",
]

[tool.coverage.run]
parallel = true
branch = true
source_pkgs = ["dicontainer", "tests"]

[tool.coverage.report]
show_missing = true
skip_covered = true
skip_empty = true
exclude_also = [
    "@overload",
    "if TYPE_CHECKING:",
]


[tool.black]
line-length = 88

[tool.ruff]
src = ["src", "tests"]

[tool.ruff.lint]
select = ["ALL"]
ignore = [
    "ANN202",   # FIXME: decide if need private members annotations
    "C901",     # sometimes things are complicated
    "COM",      # Black takes care of our commas
    "D100",     # FIXME: add docstrings
    "D102",     # FIXME: add docstrings
    "D104",     # FIXME: add docstrings
    "D105",     # FIXME: add docstrings
    "D107",     # FIXME: add docstrings
    "D202",     # FIXME: fix docstring formatting
    "D205",     # FIXME: fix docstring formatting
    "D417",     # ignore doc for every function parameter
    "E501",     # leave line-length enforcement to Black
    "EM101",    # FIXME: use own exceptions
    "EM102",    # FIXME: use own exceptions
    "EM103",    # FIXME: use own exceptions
    "I001",     # FIXME: sort imports
    "PLC0105",  # FIXME: `TypeVar` covariance naming
    "PLC0414",  # FIXME: decide
    "PLR0913",  # yes, many arguments, but most have defaults
    "PLR2004",  # numbers are sometimes fine
    "PLR5501",  # FIXME: use `elif`
    "RET503",   # FIXME
    "RET505",   # FIXME: unnecessary `else`
    "RET506",   # FIXME: unnecessary `else`
    "S101",     # FIXME: use own exceptions
    "TRY003",   # FIXME: use own exceptions
    "UP030",    # FIXME: use own exceptions
    "UP032",    # FIXME: use own exceptions
    "UP035",    # FIXME: import from `collections.abc` instead
]

[tool.ruff.lint.per-file-ignores]
"**/test_*" = [
    "ANN201",  # FIXME: annotations
    "ANN204",  # FIXME: annotations
    "ANN401",  # FIXME: annotations
    "D",       # docstrings don't matter in tests
    "N802",    # FIXME: lower case
    "PGH003",  # FIXME: ignore specific rules
    "PT011",   # broad is fine
    "PT012",   # FIXME: leave only one statement in `raises`
    "PT013",   # FIXME: import `pytest` instead
    "TD002",   # FIXME: decide on TODO format
    "TD003",   # FIXME: decide on TODO format
]

[tool.ruff.lint.isort]
lines-between-types = 1
lines-after-imports = 2

[tool.ruff.lint.pydocstyle]
convention = "google"
